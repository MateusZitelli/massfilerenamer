#! /usr/bin/python
#  -*- coding: utf-8 -*-
# Requires zenity

"""
Copyright (C) 2009-2010 Thiago Bellini<thibellini@gmail.com>

MassFileRename is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""

import os
import re
import sys


files = []
number = 1
pattern = ''


def getNewName(oldname, newname, number):
	return_name = ''
	suffix = ''
	if oldname.find('.') != -1: # This will maintain the extension ex. ".jpg" and turn it lowercase
		oldnameList = oldname.split('.')
		suffix = oldnameList[len(oldnameList)-1].lower()
	
	if suffix != '':
		return_name = newname + '_' + number + '.' + suffix
	else:
		return_name = newname + '_' + number
	
	return return_name


def getPattern():
	pattern = os.popen('zenity --title "fileRenamer" --entry --text "Enter the Pattern:" --width=320')
	pattern = pattern.read().split('\n')[0]
	if pattern.find('/') < 0:
		return pattern
	else:
		return ''

def getFiles(array):
	files = []
	for i in array:
		files.append(i)
	return files


files = getFiles(sys.argv[1:])
pattern = getPattern()

if files == [] or pattern == '': # Exit if no files or invalid pattern
	sys.exit(1)

len_files = len(str(len(files)))
if len_files == 1:
	len_files = 2 # Set default to 2, because "File_01" is better than "File_1"

for actual_file in files:
	# Skip folders, symlinks, mountpoints
	if os.path.isdir(actual_file):
		pass
	elif os.path.islink(actual_file):
		pass
	elif os.path.ismount(actual_file):
		pass
	else:
		old_name = os.path.split(actual_file)[1]
		new_name = getNewName(old_name, pattern, str(number).zfill(len_files))
		new_file = os.path.join(os.path.split(actual_file)[0], new_name)
		if actual_file != new_file: # Just a precaution, so you won`t loose data ;D
			while os.path.isfile(new_file):
				number = number + 1
				new_name = getNewName(old_name, pattern, str(number).zfill(len_files))
				new_file = os.path.join(os.path.split(actual_file)[0], new_name)
				if actual_file == new_file:
					break
		os.rename(actual_file, new_file)
		number = number + 1

sys.exit(0) # End of script!
